swagger: "2.0"
info:
  version: "1.0.0"
  title: Ner Api
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
# x-globalParameters: &GLOB_HEADER
#   - $ref: '#/parameters/authHeader'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /:
    x-swagger-router-controller: useraccount
    get:
      tags:
        - profile
      summary: Return user profile
      operationId: connectDb
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
        # 404:
        #   description: ofile not found
        #   schema:
        #     properties:
        #       message:
        #         type: string
        #         example: Not Found
  /useraccount:
    x-swagger-router-controller: useraccount
    get:
      tags:
        - profile
      summary: Get all usersaccount
      operationId: getAllUsers
      parameters:
        - $ref: "#/parameters/skip"
        - $ref: "#/parameters/limit"
      responses:
        200:
          description: Get all users
          schema:
            type: object
            properties:
              id:
                type: number
                example: 10012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized      
  /useraccount/account/{id}/view:
    x-swagger-router-controller: useraccount
    get:
      tags:
        - user
      summary: Return user profile
      operationId: viewAccount
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Stone
              dateBirthday:
                type: number
                example: 587260800000
                description: timestamp
              address1:
                type: string
                example: Upper Thompson Road
              address2:
                type: string
                example: East Cost Drive
  /useraccount/account/login:
    x-swagger-router-controller: useraccount
    post:
      tags:
        - user
      summary: Return authenticated & authorized user
      operationId: loginAccount
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: Successful login
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized              
  /useraccount/account/save:
    x-swagger-router-controller: useraccount
    post:
      tags:
        - user
      summary: Register useraccount
      operationId: registerAccount
      parameters:
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful registration
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  /useraccount/account/{id}/update:
    x-swagger-router-controller: useraccount
    put:
      tags:
        - user
      summary: Update useraccount
      operationId: updateAccount
      parameters:
        - $ref: "#/parameters/id"
        - name: body
          in: body
          description: post contents
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      responses:
        200:
          description: Successful update
          schema:
            type: object
            properties:
              username:
                type: string
                example: norbert@hutcake.com
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized              
  /useraccount/roles:
    x-swagger-router-controller: useraccount
    get:
      tags:
        - user
      summary: Return useraccount roles
      operationId: getRoles
      responses:
        200:
          description: Profile Object
          schema:
            properties:
              id:
                type: number
                example: 5000012
        403:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized                                                        
definitions:
  UserRegister:
    title: UserRegister
    type: object
    required:
      - email
    properties:
      email:
        type: string
        description: user e-mail
  UserLogin:
      title: User
      type: object
      required:
        - username
      properties:
        username:
          type: string
          description: user e-mail        
parameters:
  id:
    in: path
    name: id
    type: string
    required: true
  limit:
    in: query
    name: limit
    type: number
    required: false
  skip:
    in: query
    name: skip
    type: number
    required: false
  email:
    in: path
    name: email
    type: string
    required: true              